Function _^main^_^main() last_label=107 last_temp=140:
  Block: Entry Label: L107
    Exit labels: L100 L101 
    LABEL L107; def: use: 
    MOVE_EXTCALL t100:PTR <- malloc(Const:20); def: 100 use: 
    STORE Const:4 -> Mem(t100:PTR); def: use: 100 
    MOVE_BINOP t121:PTR <- (+, t100:PTR, Const:4); def: 121 use: 100 
    STORE Const:1 -> Mem(t121:PTR); def: use: 121 
    MOVE_BINOP t122:PTR <- (+, t100:PTR, Const:8); def: 122 use: 100 
    STORE Const:2 -> Mem(t122:PTR); def: use: 122 
    MOVE_BINOP t123:PTR <- (+, t100:PTR, Const:12); def: 123 use: 100 
    STORE Const:3 -> Mem(t123:PTR); def: use: 123 
    MOVE_BINOP t124:PTR <- (+, t100:PTR, Const:16); def: 124 use: 100 
    STORE Const:4 -> Mem(t124:PTR); def: use: 124 
    MOVE_EXTCALL t101:PTR <- malloc(Const:20); def: 101 use: 
    STORE Const:4 -> Mem(t101:PTR); def: use: 101 
    MOVE_BINOP t125:PTR <- (+, t101:PTR, Const:4); def: 125 use: 101 
    STORE Const:9 -> Mem(t125:PTR); def: use: 125 
    MOVE_BINOP t126:PTR <- (+, t101:PTR, Const:8); def: 126 use: 101 
    STORE Const:8 -> Mem(t126:PTR); def: use: 126 
    MOVE_BINOP t127:PTR <- (+, t101:PTR, Const:12); def: 127 use: 101 
    STORE Const:7 -> Mem(t127:PTR); def: use: 127 
    MOVE_BINOP t128:PTR <- (+, t101:PTR, Const:16); def: 128 use: 101 
    STORE Const:6 -> Mem(t128:PTR); def: use: 128 
    MOVE_EXTCALL t102:PTR <- malloc(Const:4); def: 102 use: 
    STORE Const:0 -> Mem(t102:PTR); def: use: 102 
    LOAD t107:INT <- Mem(t100:PTR); def: 107 use: 100 
    LOAD t108:INT <- Mem(t101:PTR); def: 108 use: 101 
    CJUMP != t107:INT t108:INT? L100 : L101; def: use: 107 108 
  Block: Entry Label: L100
    Exit labels: 
    LABEL L100; def: use: 
    EXTCALL exit(Const:-1); def: use: 
  Block: Entry Label: L101
    Exit labels: L102 
    LABEL L101; def: use: 
    MOVE_BINOP t129:INT <- (+, t107:INT, Const:1); def: 129 use: 107 
    MOVE_BINOP t117:INT <- (*, t129:INT, Const:4); def: 117 use: 129 
    MOVE_EXTCALL t109:PTR <- malloc(t117:INT); def: 109 use: 117 
    STORE t107:INT -> Mem(t109:PTR); def: use: 107 109 
    MOVE t110:INT <- Const:4; def: 110 use: 
    MOVE_BINOP t130:INT <- (+, t107:INT, Const:1); def: 130 use: 107 
    MOVE_BINOP t111:INT <- (*, t130:INT, Const:4); def: 111 use: 130 
    JUMP L102; def: use: 
  Block: Entry Label: L102
    Exit labels: L103 L104 
    LABEL L102; def: use: 
    CJUMP < t110:INT t111:INT? L103 : L104; def: use: 110 111 
  Block: Entry Label: L103
    Exit labels: L102 
    LABEL L103; def: use: 
    MOVE_BINOP t131:PTR <- (+, t109:PTR, t110:INT); def: 131 use: 109 110 
    MOVE_BINOP t132:PTR <- (+, t100:PTR, t110:INT); def: 132 use: 100 110 
    LOAD t133:INT <- Mem(t132:PTR); def: 133 use: 132 
    MOVE_BINOP t134:PTR <- (+, t101:PTR, t110:INT); def: 134 use: 101 110 
    LOAD t135:INT <- Mem(t134:PTR); def: 135 use: 134 
    MOVE_BINOP t136:INT <- (+, t133:INT, t135:INT); def: 136 use: 133 135 
    STORE t136:INT -> Mem(t131:PTR); def: use: 131 136 
    MOVE_BINOP t110:INT <- (+, t110:INT, Const:4); def: 110 use: 110 
    JUMP L102; def: use: 
  Block: Entry Label: L104
    Exit labels: L105 L106 
    LABEL L104; def: use: 
    MOVE t102:PTR <- t109:PTR; def: 102 use: 109 
    MOVE t120:PTR <- t102:PTR; def: 120 use: 102 
    LOAD t112:INT <- Mem(t102:PTR); def: 112 use: 102 
    CJUMP >= Const:0 t112:INT? L105 : L106; def: use: 112 
  Block: Entry Label: L105
    Exit labels: 
    LABEL L105; def: use: 
    EXTCALL exit(Const:-1); def: use: 
  Block: Entry Label: L106
    Exit labels: 
    LABEL L106; def: use: 
    MOVE_BINOP t137:INT <- (+, Const:0, Const:1); def: 137 use: 
    MOVE_BINOP t138:INT <- (*, t137:INT, Const:4); def: 138 use: 137 
    MOVE_BINOP t139:PTR <- (+, t120:PTR, t138:INT); def: 139 use: 120 138 
    LOAD t140:INT <- Mem(t139:PTR); def: 140 use: 139 
    RETURN t140:INT; def: use: 140 
